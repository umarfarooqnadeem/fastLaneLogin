# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference

# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/testing-ios/
version: 2.1

# Define reusable configuration using CircleCI orbs.
orbs:
  apple: circleci/xcode@2.2.0  # Use the Xcode orb for iOS jobs

# Define commands to be used in jobs.
commands:
  # Decode and build credentials (e.g., provisioning profiles, certificates)
  decode-and-build-credentials:
    description: "Decode and build credentials"
    steps:
      - run:
          name: Decode credentials
          command: |
            echo "$CERTIFICATES_BASE64" | base64 --decode > certificates/certificates.p12
            echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > provisioning/provisioning_profile.mobileprovision

  # Increment build number
  increment-build-number:
    description: "Increment build number"
    steps:
      - run:
          name: Increment build number
          command: |
            # Get the current build number from the Info.plist
            build_number=$(agvtool what-version -terse)
            # Increment the build number
            new_build_number=$((build_number + 1))
            # Set the new build number
            agvtool new-marketing-version $new_build_number

# Define jobs to be invoked later in a workflow.
jobs:
  # Build and deploy debug variant
  build-debug-and-deploy:
    executor:
      name: macos/macos
      resource-class: large
    steps:
      - checkout
      - apple/setup-xcode:
          version: "14.3"  # Specify the Xcode version
      - decode-and-build-credentials
      - increment-build-number  # Increment the build number
      - run:
          name: Install dependencies
          command: bundle install
      - run:
          name: Build debug variant
          command: bundle exec fastlane build_debug
      - store_artifacts:
          path: fastlane/debug-artifacts
      - run:
          name: Upload to TestFlight
          command: bundle exec fastlane testflight_debug

  # Build and deploy release variant
  build-release-and-deploy:
    executor:
      name: macos/macos
      resource-class: large
    steps:
      - checkout
      - apple/setup-xcode:
          version: "14.3"  # Specify the Xcode version
      - decode-and-build-credentials
      - increment-build-number  # Increment the build number
      - run:
          name: Install dependencies
          command: bundle install
      - run:
          name: Build release variant
          command: bundle exec fastlane build_release
      - store_artifacts:
          path: fastlane/release-artifacts
      - run:
          name: Upload to TestFlight
          command: bundle exec fastlane testflight

# Define workflows to manage job execution.
workflows:
  version: 2
  # Build debug variant and deploy to TestFlight
  debug:
    jobs:
      - build-debug-and-deploy:
          filters:
            branches:
              only:
                - develop  # Branch for debug builds

  # Build release variant and deploy to TestFlight
  release:
    jobs:
      - build-release-and-deploy:
          filters:
            branches:
              only:
                - main  # Branch for release builds
